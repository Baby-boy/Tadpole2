<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.lingang.core.persistence.reader.SysLogReaderMapper" >
  <resultMap id="BaseResultMap" type="com.lingang.api.domain.entity.SysLog" >
    <id column="log_id" property="logId" jdbcType="INTEGER" />
    <result column="manager_account" property="managerAccount" jdbcType="VARCHAR" />
    <result column="log_ip" property="logIp" jdbcType="VARCHAR" />
    <result column="log_content" property="logContent" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Base_Column_List" >
    log_id, manager_account, log_ip, log_content, create_time
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from sys_log
    where log_id = #{logId,jdbcType=INTEGER}
  </select>
  
  
  <sql id="SQL_Where_selectSysLogPageList">
		<where>
			1=1 
			<if test="map.managerAccount !=null and map.managerAccount !=''">
				and manager_account like '%${map.managerAccount}%'
			</if>
			
			<if test="map.beginTime !=null and map.beginTime !=''">
	       		and   create_time >= #{map.beginTime}
	       </if>
	       <if test="map.endTime !=null and map.endTime !=''">
	       		and   create_time <![CDATA[ < ]]> #{map.endTime}
	       </if>
		</where>
	</sql>
  <sql id="SQL_selectSysLogPageList" >
  	 select 
    <include refid="Base_Column_List" />
    from sys_log
    <include refid="SQL_Where_selectSysLogPageList"/>
  </sql>
  <sql id="SQL_ID_selectSysLogPageList" >
		log_id
	</sql>
  <select id="selectSysLogCount" resultType="java.lang.Integer" parameterType="java.util.Map">
  	select 
    	count(log_id) 
    from sys_log
    <include refid="SQL_Where_selectSysLogPageList"/>
  </select>
  
    <select id="selectSysLogPageList" resultMap="BaseResultMap" parameterType="java.util.Map">
    	SELECT TOP ${map.onePageCount}
			*
		FROM 
		(
			<include refid="SQL_selectSysLogPageList" />
		)
		 t
		WHERE t.<include refid="SQL_ID_selectSysLogPageList" /> 
		NOT IN
		(
			SELECT TOP (${map.onePageCount} * ${map.startIndex}) 
			nt.<include refid="SQL_ID_selectSysLogPageList" /> 
			FROM 
			(
				<include refid="SQL_selectSysLogPageList" />
			) nt order by create_time desc
		) 
		order by create_time desc;
    </select>
</mapper>